<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <Authors>GreyhamWooHoo</Authors>
    <Company>GreyhamWooHoo</Company>
    <Product>GreyhamWooHoo.Interceptor</Product>
    <Description>Intercept calls to an interface before or after the concrete implementation is invoked. 
</Description>
    <Copyright>(c) 2020 GreyhamWooHoo</Copyright>
    <PackageProjectUrl>https://github.com/greyhamwoohoo/interface-interceptor-core</PackageProjectUrl>
    <RepositoryUrl>https://github.com/greyhamwoohoo/interface-interceptor-core</RepositoryUrl>
    <PackageTags>Testing;Mocking;Capture;Replay</PackageTags>
    <PackageReleaseNotes>1.1.3
- Stub and OnAfter include parameters and arguments for the method call
- Improved internal code relating to stubbing void methods

1.1.2
- Support for multiple Before and multiple After callouts

1.1.1
- Adding support for method / return value interrogators
- Consolidated the async, Void and Task implementations (wrong assumptions/knowledge gap on my part)
- Tests consolidated / renamed
- Breaking Changes:
1. Prior implementation: non-generic Tasks were always assumed to be void (HasReturnValue=false on callout)
2. 1.1.1 Implementation: non-generic Tasks will interpret the .Result and callout with the correct result

1.0.9:
- Adding async void methods, extra tests
- Includes generic and non-generic builder interfaces (backwards compatible)

1.0.8:
- Adding support for async tasks / methods

1.0.7:
- Initial release. 
</PackageReleaseNotes>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>

</Project>
